- name: delete vms
  block:
    - name: check vm status
      community.general.proxmox_vm_info:
        api_user: "{{ api_user }}"
        api_token_secret: "{{ lookup('file', api_token_dir + '/api_token') }}"
        api_token_id: "{{ api_token_id_k3s }}"
        api_host: "{{ ansible_host }}"
        node: "{{ inventory_hostname }}"
        name: "{{ name }}"
      register: status



    - name: stop vm if running
      proxmox_kvm:
        api_user: "{{ api_user }}"
        api_token_secret: "{{ lookup('file', api_token_dir + '/api_token') }}"
        api_token_id: "{{ api_token_id_k3s }}"
        api_host: "{{ ansible_host }}"
        node: "{{ inventory_hostname }}"
        name: "{{ name }}"
        state: "stopped"
        update: yes
      when: status.proxmox_vms[0].status == "running"

    - name: check vm status
      community.general.proxmox_vm_info:
        api_user: "{{ api_user }}"
        api_token_secret: "{{ lookup('file', api_token_dir + '/api_token') }}"
        api_token_id: "{{ api_token_id_k3s }}"
        api_host: "{{ ansible_host }}"
        node: "{{ inventory_hostname }}"
        name: "{{ name }}"
      register: status
      failed_when: status.proxmox_vms[0].status == "running"
      retries: 10
      delay: 3

    - name: delete vm
      proxmox_kvm:
        api_user: "{{ api_user }}"
        api_token_secret: "{{ lookup('file', api_token_dir + '/api_token') }}"
        api_token_id: "{{ api_token_id_k3s }}"
        api_host: "{{ ansible_host }}"
        node: "{{ inventory_hostname }}"
        name: "{{ name }}"
        state: "absent"
        update: yes
  when: state == "absent"

- name: deploy vm
  block:
  - name: create vm
    proxmox_kvm:
      api_user: "{{ api_user }}"
      api_token_secret: "{{ lookup('file', api_token_dir + '/api_token') }}"
      api_token_id: "{{ api_token_id_k3s }}"
      api_host: "{{ ansible_host }}"
      node: "{{ inventory_hostname }}"
      name: "{{ name }}"
      clone: "{{ template_name }}"
      newid: "{{ new_id }}"
      full: yes
      storage: "{{ storage_name | default('vmimages') }}"
      format: qcow2
      # not upddating the network configuration 
      # net:
      #   net0: "{{ net0 }}"
    register: present_state

  - name: Wait for deployment
    ansible.builtin.wait_for:
      timeout: 6
    when: present_state.changed

  - name: update cloud-init values
    proxmox_kvm:
      api_user: "{{ api_user }}"
      api_token_secret: "{{ lookup('file', api_token_dir + '/api_token') }}"
      api_token_id: "{{ api_token_id_k3s }}"
      api_host: "{{ ansible_host }}"
      node: "{{ inventory_hostname }}"
      name: "{{ name }}"
      update: yes
      onboot: "{{ onboot | default('yes') }}"
      cores: "{{ cores | default('2') }}"
      memory: "{{ memory | default('2048') }}"
      # searchdomains: 'mydomain.internal'
      nameservers:
        - '8.8.8.8'
      ipconfig:
        ipconfig0: "ip={{ ip_address }}/24,gw=192.168.100.1"
    register: present_state

  - name: Wait for updates
    ansible.builtin.wait_for:
      timeout: 6
    when: present_state.changed

  - name: start vms
    proxmox_kvm:
      api_user: "{{ api_user }}"
      api_token_secret: "{{ lookup('file', api_token_dir + '/api_token') }}"
      api_token_id: "{{ api_token_id_k3s }}"
      api_host: "{{ ansible_host }}"
      node: "{{ inventory_hostname }}"
      name: "{{ name }}"
      update: yes
      state: "started"

  when: state != "absent"
