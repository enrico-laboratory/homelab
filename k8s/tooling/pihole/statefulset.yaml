apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pihole
  labels:
    app: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      containers:
        - name: pihole
          image: pihole/pihole:latest
          env:
            - name: MODE
              value: "standalone"
#            - name: PUID
#              value: "1000"
            - name: TZ
              value: "Europe/Amsterdam"
            - name: WEBPASSWORD
              valueFrom:
                secretKeyRef:
                  name: pihole-secrets
                  key: pass
          volumeMounts:
            - mountPath: /etc/dnsmasq.d
              name: dnsmasq
            - mountPath: /etc/dnsmasq.d/05-pihole-custom-cname.conf
              name: dns-records
              subPath: 05-pihole-custom-cname.conf
            - mountPath: /etc/pihole
              name: config
            - mountPath: /etc/pihole/custom.list
              name: dns-records
              subPath: custom.list
      tolerations:
        - key: "arm"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      volumes:
        - name: dns-records
          configMap:
            items:
              - key: custom.list
                path: custom.list
              - key: 05-pihole-custom-cname.conf
                path: 05-pihole-custom-cname.conf
            name: pihole-dns-configs
        - name: config
          persistentVolumeClaim:
            claimName: pihole-config-pvc
#          nfs:
#            server: 192.168.100.61
#            path: /mnt/fast-pool1/docker-configs/pihole/config
        - name: dnsmasq
          persistentVolumeClaim:
            claimName: pihole-dnsmasq-pvc
#          nfs:
#            server: 192.168.100.61
#            path: /mnt/fast-pool1/docker-configs/pihole/dnsmasq.d
